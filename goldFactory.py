'''
某冶金工厂生产两类合金产品，分别为M1和M2。生产M1和M2时需要三种原材料（含某种原材料的需求量为0的情形）。现有一批这样的原材料即将过期，
希望尽快用这些原材料生产M1和M2（每种原材料的数量均小于10000），请给出浪费原材料总量最少（即三种剩余原材料的数量和最小）的生产方案。
如果方案不止一种，请输出M1生产量最少时所对应的方案。

输入说明:
第一行给出生产M1所需的三种原材料数量，为整型数据；
第二行给出生产M2所需的三种原材料数量，为整型数据；
第三行给出三种原材料的库存数，为整型数据。

输出说明: 输出满足条件时，M1、M2各自的生产数量（整数解）。
输入样例:
4 2 2
6 3 2
20 10 10
输出样例：2 2
'''
def main():
    m1_1, m1_2, m1_3=map(int, input('m1需要的三种原材料分别为：').split(' '))
    # m1_1, m1_2, m1_3分别为生产m1所需要的三种材料数量
    m2_1, m2_2, m2_3 = map(int, input('m2需要的三种原材料分别为：').split(' '))
    # m2_1, m2_2, m2_3分别为生产m1所需要的三种材料数量
    m_1, m_2, m_3 = map(int, input('三种原材料库存分别为：').split(' '))
    # m_1, m_2, m_3分别三种材料库存

    m1,m2,m = 10000,10000,10000  #初始化，m1,m2为生产方案中m1,m2的生产数量，m为总库存剩余总量
    M_1,M_2,M_3 = m_1, m_2, m_3  #为了循环中重置m_1, m_2, m_3

    m1_max = min(m_1//m1_1,m_2//m1_2,m_3//m1_3)
    for num1 in range(1,m1_max):  #以m1数量从1到最大进行循环遍历
        m_1 = m_1 - num1 * m1_1
        m_2 = m_2 - num1 * m1_2
        m_3 = m_3 - num1 * m1_3
        #算出制造当前循环中m1数量后，剩余的库存
        num2 = min(m_1//m2_1,m_2//m2_2,m_3//m2_3)#获取能制遭m2最大数量
        if num2 <= 0:
            num = m_1 + m_2 + m_3
            if num < m:  #比较更新方案
                m1 = num1
                m2 = num2
                m = num
            break
        else:
            m_1 = m_1 - num2 * m2_1
            m_2 = m_2 - num2 * m2_2
            m_3 = m_3 - num2 * m2_3
            num = m_1 + m_2 + m_3
            #算出能生产最大m2后剩余库存
            if num < m: #比较更新方案
                m1 = num1
                m2 = num2
                m = num
        m_1,m_2,m_3 = M_1,M_2,M_3
    print(m1,m2)
main()

